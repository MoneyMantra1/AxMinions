name: Build (Gradle / Java 21)

on:
  push:
    branches: [ "**" ]
    tags:     [ "v*", "release-*" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

permissions:
  contents: write    # needed for creating releases on tags
  actions: read

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: gradle

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v2

      # Optional: faster Gradle builds on CI
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Detect best build task (shadowJar / reobfJar / build)
        id: pick
        shell: bash
        run: |
          set -e
          ./gradlew -q tasks --all > tasks.txt
          if grep -q "^shadowJar" tasks.txt; then
            echo "task=shadowJar" >> $GITHUB_OUTPUT
          elif grep -q "^reobfJar" tasks.txt; then
            echo "task=reobfJar" >> $GITHUB_OUTPUT
          else
            echo "task=build" >> $GITHUB_OUTPUT
          fi
          echo "Chosen task: $(cat $GITHUB_OUTPUT)"

      - name: Build (${{ steps.pick.outputs.task }})
        run: |
          ./gradlew clean ${{ steps.pick.outputs.task }} -x test --stacktrace

      - name: List build outputs
        run: |
          find . -path "*/build/libs/*.jar" -print

      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v4
        with:
          name: axminions-jars
          path: |
            **/build/libs/*.jar
          if-no-files-found: error
          compression-level: 9
          retention-days: 7

  release:
    # Only run when the ref is a tag (v*, release-*)
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: axminions-jars
          path: dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.jar
          generate_release_notes: true
