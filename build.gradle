plugins {
    id 'java-library'
    id 'io.github.goooler.shadow' version "8.1.7"
    id 'maven-publish'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
}

group = 'com.artillexstudios.axminions'
version = '1.0.15'

repositories {
    mavenCentral()

    maven {
        url = uri('https://jitpack.io/')
    }
}

dependencies {
    implementation project(path: ":api")
    implementation project(path: ":common")
    implementation project(path: ":nms:v1_20_R1", configuration: "reobf")
    implementation project(path: ":nms:v1_20_R2", configuration: "reobf")
    implementation project(path: ":nms:v1_20_R3", configuration: "reobf")
    implementation project(path: ":nms:v1_20_R4", configuration: "reobf")
    implementation project(path: ":nms:v1_21_R1", configuration: "reobf")
    implementation project(path: ":nms:v1_21_R2", configuration: "reobf")
    implementation project(path: ":nms:v1_21_R3", configuration: "reobf")
    implementation project(path: ":nms:v1_21_R4", configuration: "reobf")
}

allprojects {
    apply plugin: 'org.jetbrains.kotlin.jvm'
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'io.github.goooler.shadow'

    kotlin {
        jvmToolchain(21)
    }

    compileKotlin {
        kotlinOptions {
            javaParameters = true
        }

        compilerOptions {
            freeCompilerArgs.add("-Xno-param-assertions")
            freeCompilerArgs.add("-Xno-call-assertions")
            freeCompilerArgs.add("-Xno-receiver-assertions")
        }
    }

    repositories {
        mavenCentral()
        mavenLocal()

        maven {
            url = uri("https://repo.papermc.io/repository/maven-public/")
        }

        maven {
            url = uri('https://hub.spigotmc.org/nexus/content/repositories/snapshots/')
        }

        maven {
            url = uri('https://repo.rosewooddev.io/repository/public/' )
        }

        maven {
            url = uri('https://repo.bg-software.com/repository/api/' )
        }

        maven {
            url = uri('https://jitpack.io/')
        }

        maven {
            url = uri('https://repo.alessiodp.com/releases/')
        }

        maven {
            url = uri('https://repo.rosewooddev.io/repository/public/')
        }

        maven {
            url = uri('https://repo.bg-software.com/repository/api/')
        }

        maven {
            url = uri('https://repo.essentialsx.net/releases/')
        }

        maven {
            url = uri('https://maven.enginehub.org/repo/')
        }

        maven {
            url = uri('https://repo.codemc.org/repository/maven-snapshots')
        }

        maven {
            url = uri('https://repo.codemc.org/repository/maven-public/')
        }

        maven {
            url = uri('https://repo.alessiodp.com/releases/')
        }

        maven {
            url = uri("https://repo.artillex-studios.com/releases")
        }

        maven {
            url = uri("https://repo.glaremasters.me/repository/towny")
        }

        maven {
            url = uri("https://repo.extendedclip.com/content/repositories/placeholderapi/")
        }
    }

    dependencies {
        compileOnly 'org.jetbrains.kotlin:kotlin-stdlib:1.9.22'
        implementation("com.artillexstudios.axapi:axapi:1.4.671:all")
    }
}


shadowJar {
    relocate("com.artillexstudios.axapi", "com.artillexstudios.axminions.libs.axapi")
    relocate("org.h2", "com.artillexstudios.axminions.libs.h2")
    relocate("org.jetbrains.kotlin", "com.artillexstudios.axminions.libs.kotlin")
    relocate("com.zaxxer", "com.artillexstudios.axminions.libs.hikaricp")
    relocate("org.bstats", "com.artillexstudios.axminions.libs.bstats")
    relocate("net.byteflux", "com.artillexstudios.axminions.libs.libby")
    relocate("net.kyori", "com.artillexstudios.axminions.libs.kyori")
    relocate("revxrsal.commands", "com.artillexstudios.axminions.libs.lamp")
    relocate("org.jetbrains.annotations", "com.artillexstudios.axminions.libs.annotations")
    relocate("org.intellij.lang.annotations", "com.artillexstudios.axminions.libs.intellij.annotations")
}

kotlin {
    jvmToolchain(21)
}

tasks.build.dependsOn(shadowJar)
